package m2_proyecto;

import javax.swing.JOptionPane;

/**
 * Universidad Tecnologica de la Huasteca Hidalguiense
 * TSU En Tecnologias de la Informacion Area Desarrollo de Software Multiplataforma
 * @author Irving Aldahir Angeles Romero
 * Estructura de Datos Aplicadas
 * Clase: FrmGestLibro
 * Fecha: 28 oct 2024
 */
public class FrmGestLibros extends javax.swing.JFrame {
    static TDAArregloLibreria1D coleccionLibros;
    static TDAListaLigada lista;

    public FrmGestLibros(TDAArregloLibreria1D coleccionLibros, TDAListaLigada lista) {
        this.coleccionLibros = coleccionLibros;
        this.lista = lista;
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtLibro = new javax.swing.JTextField();
        txtAutor = new javax.swing.JTextField();
        txtEditorial = new javax.swing.JTextField();
        txtISBN = new javax.swing.JTextField();
        btnAggPrinpcipio = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnBuscarXAutor = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnAggFinal = new javax.swing.JButton();
        btnAggPosN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDetallesLibro = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        cmbColeccionLibros = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        cmbFiltro = new javax.swing.JComboBox<>();
        btnGenerarReporte = new javax.swing.JButton();
        btnElimPrimero = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnElimFinal = new javax.swing.JButton();
        btnElimPosN = new javax.swing.JButton();
        btnVaciarLista = new javax.swing.JButton();
        btnOrdenar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Titulo");

        jLabel2.setText("Autor");

        jLabel3.setText("Editorial");

        jLabel4.setText("ISBN");

        btnAggPrinpcipio.setText("al principio");
        btnAggPrinpcipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAggPrinpcipioActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar libro");
        btnBuscar.setToolTipText("");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnBuscarXAutor.setText("Buscar libros por autor");
        btnBuscarXAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarXAutorActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Gestion de Libros");

        jLabel7.setText("Agregar a biblioteca:");
        jLabel7.setToolTipText("");

        btnAggFinal.setText("al final");
        btnAggFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAggFinalActionPerformed(evt);
            }
        });

        btnAggPosN.setText("en posicion N");
        btnAggPosN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAggPosNActionPerformed(evt);
            }
        });

        txtDetallesLibro.setColumns(20);
        txtDetallesLibro.setRows(5);
        jScrollPane1.setViewportView(txtDetallesLibro);

        jLabel13.setText("libros agregados");

        cmbColeccionLibros.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbColeccionLibrosItemStateChanged(evt);
            }
        });

        jLabel14.setText("detalles del lbro:");

        jLabel15.setText("Ordenar por");

        cmbFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Autor", "Editorial", "ISBN", "Invertir colecci√≥n de libros" }));

        btnGenerarReporte.setText("Generar reporte de biblioteca");
        btnGenerarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarReporteActionPerformed(evt);
            }
        });

        btnElimPrimero.setText("el primero");
        btnElimPrimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimPrimeroActionPerformed(evt);
            }
        });

        jLabel8.setText("Eliminar libro:");
        jLabel8.setToolTipText("");

        btnElimFinal.setText("el ultimo");
        btnElimFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimFinalActionPerformed(evt);
            }
        });

        btnElimPosN.setText("libro numero N");
        btnElimPosN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimPosNActionPerformed(evt);
            }
        });

        btnVaciarLista.setText("vaciar lista");
        btnVaciarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaciarListaActionPerformed(evt);
            }
        });

        btnOrdenar.setText("Ordenar");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel9.setText("Irving Aldahir Angeles Romero. - ProyM2.");
        jLabel9.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnElimPrimero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnElimFinal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnElimPosN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVaciarLista))
                    .addComponent(cmbColeccionLibros, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(242, 242, 242))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3))
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtLibro)
                                    .addComponent(txtAutor)
                                    .addComponent(txtEditorial)
                                    .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(jLabel15)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnBuscarXAutor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 19, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnAggPrinpcipio)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnAggFinal)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnAggPosN))
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btnGenerarReporte, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAggPrinpcipio)
                            .addComponent(btnAggFinal)
                            .addComponent(btnAggPosN))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarXAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEditorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(cmbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(btnOrdenar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbColeccionLibros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnElimPrimero)
                    .addComponent(btnElimFinal)
                    .addComponent(btnElimPosN)
                    .addComponent(btnVaciarLista))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGenerarReporte)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAggPrinpcipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAggPrinpcipioActionPerformed
        try{
            String nombre = txtLibro.getText();
            String autor = txtAutor.getText();
            String editorial = txtEditorial.getText();
            String ISBN = txtISBN.getText();
        
            Libro libro = new Libro(nombre, autor, editorial, Long.parseLong(ISBN));
        
            lista.insertarInicio(libro);
            
            cmbColeccionLibros.removeAllItems(); //Limpiar lista
            Libro[] libros = coleccionLibros.cargarLibrosDesdeListaLigada();
            for(int l=0; l<libros.length;l++){
                cmbColeccionLibros.addItem(l+1 +".- "+ libros[l].getTitulo());                
            }
                cmbColeccionLibros.showPopup();

        }catch(Exception e){
        JOptionPane.showMessageDialog(rootPane, "Comprueba los campos de entrada");
        }

    }//GEN-LAST:event_btnAggPrinpcipioActionPerformed

    private void btnAggFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAggFinalActionPerformed
        try{
            String nombre = txtLibro.getText();
            String autor = txtAutor.getText();
            String editorial = txtEditorial.getText();
            String ISBN = txtISBN.getText();
        
            Libro libro = new Libro(nombre, autor, editorial, Long.parseLong(ISBN));
        
            lista.insertarFin(libro);
        
            cmbColeccionLibros.removeAllItems(); //Limpiar lista
            Libro[] libros = coleccionLibros.cargarLibrosDesdeListaLigada();
            for(int l=0; l<libros.length;l++){
                cmbColeccionLibros.addItem(l+1 +".- "+ libros[l].getTitulo());                
            }
                            cmbColeccionLibros.showPopup();

        }catch(Exception e){
        JOptionPane.showMessageDialog(rootPane, "Comprueba los campos de entrada");
        }
    }//GEN-LAST:event_btnAggFinalActionPerformed

    private void btnAggPosNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAggPosNActionPerformed
        try{
            int posicion=-1;
            
            posicion = Integer.parseInt(JOptionPane.showInputDialog("Ingresa la posici√≥n donde insertar"));                                
            
            if(posicion>0 && posicion <= lista.getTam()+1){
                try{
                    String nombre = txtLibro.getText();
                    String autor = txtAutor.getText();
                    String editorial = txtEditorial.getText();
                    String ISBN = txtISBN.getText();

            
                    Libro libro = new Libro(nombre, autor, editorial, Long.parseLong(ISBN));
        
                    lista.insertarNodoPosN(posicion,libro);
        
                    cmbColeccionLibros.removeAllItems(); //Limpiar lista
                    Libro[] libros = coleccionLibros.cargarLibrosDesdeListaLigada();
                    for(int l=0; l<libros.length;l++){
                        cmbColeccionLibros.addItem(l+1 +".- "+ libros[l].getTitulo());                
                    }
                    cmbColeccionLibros.showPopup();
                }catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane,"Comprueba los datos de entrada");
                }
            }else{
                JOptionPane.showMessageDialog(rootPane,"la posicion ingresada debe ser menor o igual al tama√±o de la lista");                   
            }
            cmbColeccionLibros.showPopup();

                            
        }catch(Exception e){
        }   
        
    }//GEN-LAST:event_btnAggPosNActionPerformed

    private void cmbColeccionLibrosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbColeccionLibrosItemStateChanged
    String nombreSeleccionado = (String) cmbColeccionLibros.getSelectedItem(); // Obtener el nombre seleccionado
    
        if (nombreSeleccionado != null) { // Verificar que no sea nulo
            String numExistente = "\\d+\\.- ";
        
            // Reemplazar el patr√≥n por una cadena vac√≠a (eliminaci√≥n)
            String resultado = nombreSeleccionado.replaceAll(numExistente, "");
        
            // Buscar el libro con el nombre filtrado y mostrar detalles
            Libro libroEncontrado = coleccionLibros.obtenerLibro(resultado);
        
            if (libroEncontrado != null) 
                txtDetallesLibro.setText(libroEncontrado.toString());
            else 
                txtDetallesLibro.setText("Libro no encontrado.");    
        }else{
                txtDetallesLibro.setText("no existen Libros en la lista.");    
        }
    }//GEN-LAST:event_cmbColeccionLibrosItemStateChanged

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
    try {
        String nombre = txtLibro.getText();
        String autor = txtAutor.getText();
        String editorial = txtEditorial.getText();
        String ISBN = txtISBN.getText();
    
        Libro libro = new Libro(nombre, autor, editorial, Long.parseLong(ISBN));
        
        Nodo libroBuscar = lista.buscarNodo(libro);
        if(libroBuscar!=null){
                JOptionPane.showMessageDialog(null, "El libro SI existe");
        }else{
                JOptionPane.showMessageDialog(null, "El libro NO existe");
        }
        
        boolean duplicado = coleccionLibros.buscarLibrosDuplicados(libro);
        if (duplicado) {
            int seleccion = JOptionPane.showOptionDialog(null,"Existen ejemplares duplicados, deseas eliminarlos?",null,JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE,null,null,null);
            if (seleccion == JOptionPane.YES_OPTION) {
                coleccionLibros.eliminarLibrosDuplicados(); // Llama al m√©todo que elimina duplicados
                JOptionPane.showMessageDialog(null, "Libros duplicados eliminados.");
            }
        }
        
        // Actualizar ComboBox
        cmbColeccionLibros.removeAllItems(); // Limpiar lista
        Libro[] libros = coleccionLibros.cargarLibrosDesdeListaLigada();
        for (int l = 0; l < libros.length; l++) {
            cmbColeccionLibros.addItem((l + 1) + ".- " + libros[l].getTitulo());                
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(rootPane, "Comprueba los campos de entrada");
    }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnBuscarXAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarXAutorActionPerformed
           String autor = JOptionPane.showInputDialog("Ingresa el nombre del autor");
           Libro obrasAutor[] = coleccionLibros.obtenerTodasLasObrasDeCiertoAutor(autor);
           if(obrasAutor!=null){
           // Actualizar ComboBox
                cmbColeccionLibros.removeAllItems(); // Limpiar lista
                for (int l = 0; l < obrasAutor.length; l++) {
                    cmbColeccionLibros.addItem((l + 1) + ".- " + obrasAutor[l].getTitulo());                
                }
            }
    }//GEN-LAST:event_btnBuscarXAutorActionPerformed

    private void btnElimPrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimPrimeroActionPerformed
        try{
            String nombre = txtLibro.getText();
            String autor = txtAutor.getText();
            String editorial = txtEditorial.getText();
            String ISBN = txtISBN.getText();
        
            Libro libro = new Libro(nombre, autor, editorial, Long.parseLong(ISBN));
        
            lista.eliminarInicio();
        
            cmbColeccionLibros.removeAllItems(); //Limpiar lista
            Libro[] libros = coleccionLibros.cargarLibrosDesdeListaLigada();
            for(int l=0; l<libros.length;l++){
                cmbColeccionLibros.addItem(l+1 +".- "+ libros[l].getTitulo());                
            }
            cmbColeccionLibros.showPopup();

        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane,"Algo ocurrio");
        }
    }//GEN-LAST:event_btnElimPrimeroActionPerformed

    private void btnElimFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimFinalActionPerformed
        try{
            String nombre = txtLibro.getText();
            String autor = txtAutor.getText();
            String editorial = txtEditorial.getText();
            String ISBN = txtISBN.getText();
        
            Libro libro = new Libro(nombre, autor, editorial, Long.parseLong(ISBN));
        
            lista.eliminarFin();
        
            cmbColeccionLibros.removeAllItems(); //Limpiar lista
            Libro[] libros = coleccionLibros.cargarLibrosDesdeListaLigada();
            for(int l=0; l<libros.length;l++){
                cmbColeccionLibros.addItem(l+1 +".- "+ libros[l].getTitulo());                
            }
                cmbColeccionLibros.showPopup();

        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane,"Algo ocurrio");
        }    }//GEN-LAST:event_btnElimFinalActionPerformed

    private void btnElimPosNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimPosNActionPerformed
        try{
            int posicion=-1;
            
            posicion = Integer.parseInt(JOptionPane.showInputDialog("Ingresa la posici√≥n del libro que deseas eliminar"));                                
            
            if(posicion>0 && posicion <= lista.getTam()+1){
                try{        
                    lista.eliminarNodoPosN(posicion);
        
                    cmbColeccionLibros.removeAllItems(); //Limpiar lista
                    Libro[] libros = coleccionLibros.cargarLibrosDesdeListaLigada();
                    for(int l=0; l<libros.length;l++){
                        cmbColeccionLibros.addItem(l+1 +".- "+ libros[l].getTitulo());                
                    }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane,"Algo ocurrio");
                }
                cmbColeccionLibros.showPopup();

            }else{
                JOptionPane.showMessageDialog(rootPane,"la posicion ingresada debe ser menor o igual al tama√±o de la lista");                   
            }
        }catch(Exception e){
        }   
    }//GEN-LAST:event_btnElimPosNActionPerformed

    private void btnVaciarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaciarListaActionPerformed
        // Llamar al m√©todo que vac√≠a la lista en LibreriaD1
        coleccionLibros.vaciarLista();
    
        // Mostrar mensaje de confirmaci√≥n
        JOptionPane.showMessageDialog(this, "La lista de libros ha sido vaciada.");

        // Actualizar el ComboBox eliminando todos los elementos
        cmbColeccionLibros.removeAllItems();
        txtLibro.setText("");
        txtAutor.setText("");
        txtISBN.setText("");
        txtEditorial.setText("");      
    }//GEN-LAST:event_btnVaciarListaActionPerformed

    private void btnGenerarReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarReporteActionPerformed
        txtDetallesLibro.setText("");
        txtDetallesLibro.setText(coleccionLibros.generarReporteLibreria());
    }//GEN-LAST:event_btnGenerarReporteActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
            dispose(); // Cierra solo este formulario
    }//GEN-LAST:event_formWindowClosing

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
   String opc = cmbFiltro.getSelectedItem().toString();

    Libro[] ordenados = null;
    
    // Usamos un switch en base al valor seleccionado en el ComboBox
    switch(opc) {
        case "Nombre":
            ordenados = coleccionLibros.ordenarLibrosPorNombre();
            break;
        case "Autor":
            ordenados = coleccionLibros.ordenarLibrosPorAutor();
            break;
        case "Editorial":
            ordenados = coleccionLibros.ordenarLibrosPorEditorial();
            break;
        case "ISBN":
            ordenados = coleccionLibros.ordenarLibrosPorISBN();
            break;
        case "Invertir colecci√≥n de libros":
            cmbColeccionLibros.removeAllItems(); //Limpiar lista
            lista.invertirLista();
            Libro[] libros = coleccionLibros.cargarLibrosDesdeListaLigada();
            for(int l=0; l<libros.length;l++){
               cmbColeccionLibros.addItem(l+1 +".- "+ libros[l].getTitulo());                
            }
            return;
            
        default:
            return;
    }

    cmbColeccionLibros.removeAllItems();
    Libro[] libros = ordenados;
    for (int l = 0; l < libros.length; l++) {
        cmbColeccionLibros.addItem((l + 1) + ".- " + libros[l].getTitulo());
    }
    cmbColeccionLibros.showPopup();

    }//GEN-LAST:event_btnOrdenarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmGestLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmGestLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmGestLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmGestLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmGestLibros(coleccionLibros,lista).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAggFinal;
    private javax.swing.JButton btnAggPosN;
    private javax.swing.JButton btnAggPrinpcipio;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarXAutor;
    private javax.swing.JButton btnElimFinal;
    private javax.swing.JButton btnElimPosN;
    private javax.swing.JButton btnElimPrimero;
    private javax.swing.JButton btnGenerarReporte;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JButton btnVaciarLista;
    private javax.swing.JComboBox<String> cmbColeccionLibros;
    private javax.swing.JComboBox<String> cmbFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextArea txtDetallesLibro;
    private javax.swing.JTextField txtEditorial;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtLibro;
    // End of variables declaration//GEN-END:variables

}
